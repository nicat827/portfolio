generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id           String   @id @default(cuid())
  imageUrl     String?
  technologies String[]
  githubUrl    String?
  liveUrl      String?
  featured     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  translations ProjectTranslation[]

  @@map("projects")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String?
  message   String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model Experience {
  id           String    @id @default(cuid())
  startDate    DateTime
  endDate      DateTime?
  current      Boolean   @default(false)
  technologies String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  translations ExperienceTranslation[]

  @@map("experiences")
}

model Education {
  id          String   @id @default(cuid())
  startDate   DateTime
  endDate     DateTime?
  current     Boolean  @default(false)
  grade       String?
  website     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  translations EducationTranslation[]

  @@map("educations")
}

model ProjectTranslation {
  id          String   @id @default(cuid())
  projectId   String
  language    String   // 'en', 'ru', 'az'
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([projectId, language])
  @@map("project_translations")
}

model ExperienceTranslation {
  id          String   @id @default(cuid())
  experienceId String
  language    String   // 'en', 'ru', 'az'
  company     String
  position    String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  experience  Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade)

  @@unique([experienceId, language])
  @@map("experience_translations")
}

model EducationTranslation {
  id          String   @id @default(cuid())
  educationId String
  language    String   // 'en', 'ru', 'az'
  institution String
  degree      String
  field       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  education   Education @relation(fields: [educationId], references: [id], onDelete: Cascade)

  @@unique([educationId, language])
  @@map("education_translations")
}

